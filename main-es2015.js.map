{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/countries/countries.component.ts","./src/app/components/countries/countries.component.html","./src/app/components/dashboard-card/dashboard-card.component.ts","./src/app/components/dashboard-card/dashboard-card.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/data-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\n\n\nconst routes: Routes = [\n  {path:'', component: HomeComponent},\n  {path:'countries', component: CountriesComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid19Tracker';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { DataServiceService } from './services/data-service.service';\nimport { Ng2GoogleChartsModule } from 'ng2-google-charts';\nimport { DashboardCardComponent } from './components/dashboard-card/dashboard-card.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CountriesComponent,\n    DashboardCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    Ng2GoogleChartsModule\n  ],\n  providers: [DataServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalDataSummary } from 'src/app/models/gloabl-data';\nimport { DateWiseData } from 'src/app/models/date-wise-data';\nimport { GoogleChartInterface } from 'ng2-google-charts/google-charts-interfaces';\nimport { merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n\n  data:GlobalDataSummary[];\n  countries :String[]= [];\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  selectedCountryData: DateWiseData[];\n  dateWiseData:any;\n  loading = true;\n  lineChart : GoogleChartInterface= {\n      chartType: 'LineChart'\n  }\n  constructor(private dataService: DataServiceService) { }\n\n  ngOnInit() {\n\n    merge(\n      this.dataService.getDataWiseData().pipe(\n        map(result=>{\n          this.dateWiseData = result;\n        })\n      ),\n      this.dataService.getGlobalData().pipe(\n        map(result=>{\n            this.data=result;\n            this.data.forEach(cs=>{\n            this.countries.push(cs.country);\n          })\n        }))\n    ).subscribe(\n      {\n        complete: ()=>{\n          this.updateValues('India');\n          this.loading=false;\n        }\n      }\n    )\n    \n \n  }\n\n  updateChart() {\n    let dataTable = [];\n    dataTable.push(['Date','Cases']);\n    this.selectedCountryData.forEach(cs=>{\n      dataTable.push([cs.date, cs.cases])\n    })\n\n    this.lineChart= {\n      chartType: 'LineChart',\n      dataTable: dataTable,\n      //firstRowIsData: true,\n      options: { \n          height :500, \n          animation:{\n            duration: 1000,\n            easing: 'out',\n          },\n      },\n    };\n  }\n\n  updateValues(country : string){\n    \n    this.data.forEach(cs=>{\n      if(cs.country == country)\n      {\n        this.totalActive = cs.active;\n        this.totalConfirmed = cs.confirmed;\n        this.totalDeaths = cs.deaths;\n        this.totalRecovered = cs.recovered;\n      }\n    })\n\n    this.selectedCountryData = this.dateWiseData[country]\n    // console.log(this.selectedCountryData);\n    this.updateChart();\n    \n  }\n\n}\n","<div class=\"ui inverted dimmer\" [class.active]='loading'>\n    <div class=\"ui text loader\">Loading</div>\n</div>\n  \n\n<div class=\"jumbotron bg-white text-center\">\n    <h1 class=\"display-4\">Corona Covid-19 Tracker Country Wise</h1>\n    <hr>\n    <div class=\"mx-auto\">\n        <div class=\"form-group col-lg-5 mx-auto\">\n            <label for=\"c\">Select Country</label>\n            <select name=\"\" class=\"form-control\" id=\"c\" #input (change)=\"updateValues(input.value)\">\n                <option value=\"{{con}}\" *ngFor=\"let con of countries\">{{con}}</option>\n            </select>\n        </div>\n    </div>\n    <app-dashboard-card [totalConfirmed]=\"totalConfirmed\" [totalActive]=\"totalActive\" [totalRecovered]=\"totalRecovered\"\n    [totalDeaths]=\"totalDeaths\" ></app-dashboard-card>\n\n    <div class=\"row\">\n\n        <div class=\"col\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>S.No.</th>\n                        <th>Date</th>\n                        <th>Cases</th>\n                    </tr>\n                </thead>\n    \n                <tbody>\n                    <tr *ngFor=\"let case of selectedCountryData; index as i\">\n                        <td>{{i+1}}</td>\n                        <td>{{case.date | date}}</td>\n                        <td>{{case.cases}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <div class=\"col\">\n            <google-chart [data]=\"lineChart\"></google-chart>\n        </div>\n\n\n\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-card',\n  templateUrl: './dashboard-card.component.html',\n  styleUrls: ['./dashboard-card.component.css']\n})\nexport class DashboardCardComponent implements OnInit {\n\n  @Input('totalConfirmed')\n  totalConfirmed;\n  @Input('totalDeaths')\n  totalDeaths;\n  @Input('totalActive')\n  totalActive;\n  @Input('totalRecovered')\n  totalRecovered;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n              <h3>confirmed</h3>\n            </div>\n            <div class=\"value\">\n              {{totalConfirmed}}\n            </div>\n          </div>\n    </div>\n\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n              <h3>Recovered</h3>\n            </div>\n            <div class=\"value\">\n              {{totalRecovered}}\n            </div>\n          </div>\n    </div>\n\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n              <h3>Deaths</h3>\n            </div>\n            <div class=\"value\">\n              {{totalDeaths}}\n            </div>\n          </div>\n    </div>\n\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n              <h3>Active</h3>\n            </div>\n            <div class=\"value\">\n              {{totalActive}}\n            </div>\n          </div>\n    </div>\n\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalDataSummary } from 'src/app/models/gloabl-data';\nimport { GoogleChartInterface } from 'ng2-google-charts/google-charts-interfaces';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  loading = true;\n  globalData : GlobalDataSummary[];\n  pieChart : GoogleChartInterface ={ chartType:'PieChart' }\n  columnChart : GoogleChartInterface ={ chartType:'ColumnChart' }\n  constructor(private dataService:DataServiceService) { }\n\n  initChart(caseType: String){\n\n    let datatable = [];\n    datatable.push([\"Country\",\"Cases\"]);\n    \n    this.globalData.forEach(cs=>{\n      let value:number;\n      if (caseType == 'c')\n        if (cs.confirmed > 300000) \n          value=cs.confirmed;\n          \n      if (caseType == 'a')\n        if (cs.active > 100000) \n          value=cs.active;\n\n      if (caseType == 'd')\n        if (cs.deaths > 10000) \n          value=cs.deaths;\n\n      if (caseType == 'r')\n        if (cs.recovered > 250000) \n          value=cs.recovered;\n\n        datatable.push([\n          cs.country , value\n        ])\n    })\n    console.log(datatable);\n    \n\n    this.pieChart = {\n      chartType: 'PieChart',\n      dataTable : datatable,\n      //firstRowIsData: true,\n      options: { \n          height: 500,\n          animation:{\n            duration: 1000,\n            easing: 'out',\n          },\n      },\n    };\n\n    this.columnChart = {\n      chartType: 'ColumnChart',\n      dataTable : datatable,\n      //firstRowIsData: true,\n      options: { \n        height: 500,\n        animation:{\n          duration: 1000,\n          easing: 'out',\n        },\n      },\n    };\n  }\n\n  ngOnInit(): void {\n    this.dataService.getGlobalData()\n    .subscribe(\n      {\n        next: (result)=>{\n          console.log(result);\n          this.globalData= result;\n          result.forEach(cs=>{\n            if(!Number.isNaN(cs.confirmed)){\n            this.totalActive += cs.active;\n            this.totalConfirmed += cs.confirmed;\n            this.totalDeaths += cs.deaths;\n            this.totalRecovered += cs.recovered;\n            }\n\n          })\n\n          \n          this.initChart('c');\n        },\n        complete: ()=>{\n          this.loading=false;\n        }\n      }\n    )\n  }\n\n  updateChart(input: HTMLInputElement){\n    console.log(input.value);\n    this.initChart(input.value);\n  }\n\n}\n","<div class=\"ui inverted dimmer\" [class.active]='loading'>\n  <div class=\"ui text loader\">Loading</div>\n</div>\n\n<div class=\"jumbotron bg-white text-center\">\n    <h1 class=\"display-4\">Corona Covid-19 Tracker</h1>\n    <hr>\n    <app-dashboard-card [totalConfirmed]=\"totalConfirmed\" [totalActive]=\"totalActive\" [totalRecovered]=\"totalRecovered\"\n    [totalDeaths]=\"totalDeaths\" ></app-dashboard-card>\n</div>\n<hr>\n<div class=\"ui form\">\n  <div class=\"inline fields\">\n    <label for=\"fruit\">Select Case Type:</label>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"c\" #c (click)=\"updateChart(c)\" value='c' name=\"casetype\" checked=\"\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"c\">Confirmed</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"d\" #d (click)=\"updateChart(d)\" value='d' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"d\">Deaths</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"r\" #r (click)=\"updateChart(r)\" value='r' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"r\">Recovered</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"a\" #a (click)=\"updateChart(a)\" value='a' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"a\">Active</label>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col\">\n    <google-chart [data]=\"columnChart\"></google-chart>\n  </div>\n  <div class=\"col\">\n    <google-chart [data]=\"pieChart\"></google-chart>    \n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" routerLink=\"/\">Covid-19 Tracker</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" routerLink=\"/\">Home <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"countries\">Countries</a>\n        </li>\n        \n      </ul>\n      <form class=\"form-inline my-2 my-lg-0\">\n        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n        <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n      </form>\n    </div>\n  </nav>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from \"rxjs/operators\";\nimport { GlobalDataSummary } from '../models/gloabl-data';\nimport { DateWiseData } from '../models/date-wise-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService {\n\n  private globalDataUrl=\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/08-18-2020.csv\";\n  private dateWiseDataUrl=\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\"\n\n  constructor(private http:HttpClient) { }\n\n  getDataWiseData(){\n    return this.http.get(this.dateWiseDataUrl,{responseType:'text'})\n      .pipe(map(result =>{\n          let rows= result.split('\\n');\n          let mainData = {};\n          // console.log(rows);\n          let header = rows[0];\n          let dates = header.split(/,(?=\\S)/);\n          dates.splice(0,11);\n          rows.splice(0,1);\n          // console.log(dates);\n          \n          rows.forEach(row=>{\n            let cols = row.split(/,(?=\\S)/);\n            // console.log(cols);\n            \n            let con =cols [1] ;\n            cols.splice(0,11);\n            // console.log(con , cols);\n            mainData[con]= [];\n            cols.forEach((value,index)=>{\n              let dw: DateWiseData = {\n                cases: +value,\n                country: con,\n                date:new Date(Date.parse(dates[index]))\n              }\n              mainData[con].push(dw);\n            })\n          })\n          // console.log(mainData);\n          \n          return mainData;\n      }))\n  }\n\n  getGlobalData(){\n    return this.http.get(this.globalDataUrl, {responseType: 'text'}).pipe(\n      map(result=>{\n        let data:GlobalDataSummary[]=[];\n        let raw = [];\n        let rows=result.split('\\n');\n        rows.splice(0, 1);\n        // console.log(rows);\n        rows.forEach(row=>{\n          let cols= row.split(/,(?=\\S)/);\n          let cs= {\n            country: cols[3],\n            confirmed: +cols[7],\n            deaths: +cols[8],\n            recovered: +cols[9],\n            active: +cols[10]\n          };\n          let temp = raw[cs.country];\n          if(temp){\n            temp.active= cs.active + temp.active;\n            temp.confirmed= cs.confirmed + temp.confirmed;\n            temp.deaths= cs.deaths + temp.deaths;\n            temp.recovered= cs.recovered + temp.recovered;\n\n            raw[cs.country] = temp;\n          }else{\n            raw[cs.country] = cs;\n          }\n          \n        })\n\n        return <GlobalDataSummary[]>Object.values(raw);\n      })\n    )\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}