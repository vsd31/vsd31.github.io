{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/countries/countries.component.ts","webpack:///src/app/components/countries/countries.component.html","webpack:///src/app/components/dashboard-card/dashboard-card.component.ts","webpack:///src/app/components/dashboard-card/dashboard-card.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/services/data-service.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CountriesComponent","dataService","countries","totalConfirmed","totalActive","totalDeaths","totalRecovered","loading","lineChart","chartType","getDataWiseData","pipe","result","dateWiseData","getGlobalData","data","forEach","cs","push","country","subscribe","complete","updateValues","dataTable","selectedCountryData","date","cases","options","height","animation","duration","easing","active","confirmed","deaths","recovered","updateChart","DashboardCardComponent","HomeComponent","pieChart","columnChart","caseType","datatable","globalData","value","console","log","next","Number","isNaN","initChart","input","NavbarComponent","DataServiceService","http","globalDataUrl","dateWiseDataUrl","get","responseType","rows","split","mainData","header","dates","splice","row","cols","con","index","dw","Date","parse","raw","temp","Object","values","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\n\n\nconst routes: Routes = [\n  {path:'', component: HomeComponent},\n  {path:'countries', component: CountriesComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid19Tracker';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { DataServiceService } from './services/data-service.service';\nimport { Ng2GoogleChartsModule } from 'ng2-google-charts';\nimport { DashboardCardComponent } from './components/dashboard-card/dashboard-card.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CountriesComponent,\n    DashboardCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    Ng2GoogleChartsModule\n  ],\n  providers: [DataServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalDataSummary } from 'src/app/models/gloabl-data';\nimport { DateWiseData } from 'src/app/models/date-wise-data';\nimport { GoogleChartInterface } from 'ng2-google-charts/google-charts-interfaces';\nimport { merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n\n  data:GlobalDataSummary[];\n  countries :String[]= [];\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  selectedCountryData: DateWiseData[];\n  dateWiseData:any;\n  loading = true;\n  lineChart : GoogleChartInterface= {\n      chartType: 'LineChart'\n  }\n  constructor(private dataService: DataServiceService) { }\n\n  ngOnInit() {\n\n    merge(\n      this.dataService.getDataWiseData().pipe(\n        map(result=>{\n          this.dateWiseData = result;\n        })\n      ),\n      this.dataService.getGlobalData().pipe(\n        map(result=>{\n            this.data=result;\n            this.data.forEach(cs=>{\n            this.countries.push(cs.country);\n          })\n        }))\n    ).subscribe(\n      {\n        complete: ()=>{\n          this.updateValues('India');\n          this.loading=false;\n        }\n      }\n    )\n    \n \n  }\n\n  updateChart() {\n    let dataTable = [];\n    dataTable.push(['Date','Cases']);\n    this.selectedCountryData.forEach(cs=>{\n      dataTable.push([cs.date, cs.cases])\n    })\n\n    this.lineChart= {\n      chartType: 'LineChart',\n      dataTable: dataTable,\n      //firstRowIsData: true,\n      options: { \n          height :500, \n          animation:{\n            duration: 1000,\n            easing: 'out',\n          },\n      },\n    };\n  }\n\n  updateValues(country : string){\n    \n    this.data.forEach(cs=>{\n      if(cs.country == country)\n      {\n        this.totalActive = cs.active;\n        this.totalConfirmed = cs.confirmed;\n        this.totalDeaths = cs.deaths;\n        this.totalRecovered = cs.recovered;\n      }\n    })\n\n    this.selectedCountryData = this.dateWiseData[country]\n    // console.log(this.selectedCountryData);\n    this.updateChart();\n    \n  }\n\n}\n","<div class=\"ui inverted dimmer\" [class.active]='loading'>\n    <div class=\"ui text loader\">Loading</div>\n</div>\n  \n\n<div class=\"jumbotron bg-white text-center\">\n    <h1 class=\"display-4\">Corona Covid-19 Tracker Country Wise</h1>\n    <hr>\n    <div class=\"mx-auto\">\n        <div class=\"form-group col-lg-5 mx-auto\">\n            <label for=\"c\">Select Country</label>\n            <select name=\"\" class=\"form-control\" id=\"c\" #input (change)=\"updateValues(input.value)\">\n                <option value=\"{{con}}\" *ngFor=\"let con of countries\">{{con}}</option>\n            </select>\n        </div>\n    </div>\n    <app-dashboard-card [totalConfirmed]=\"totalConfirmed\" [totalActive]=\"totalActive\" [totalRecovered]=\"totalRecovered\"\n    [totalDeaths]=\"totalDeaths\" ></app-dashboard-card>\n\n    <div class=\"row\">\n\n        <div class=\"col\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>S.No.</th>\n                        <th>Date</th>\n                        <th>Cases</th>\n                    </tr>\n                </thead>\n    \n                <tbody>\n                    <tr *ngFor=\"let case of selectedCountryData; index as i\">\n                        <td>{{i+1}}</td>\n                        <td>{{case.date | date}}</td>\n                        <td>{{case.cases}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <div class=\"col\">\n            <google-chart [data]=\"lineChart\"></google-chart>\n        </div>\n\n\n\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-card',\n  templateUrl: './dashboard-card.component.html',\n  styleUrls: ['./dashboard-card.component.css']\n})\nexport class DashboardCardComponent implements OnInit {\n\n  @Input('totalConfirmed')\n  totalConfirmed;\n  @Input('totalDeaths')\n  totalDeaths;\n  @Input('totalActive')\n  totalActive;\n  @Input('totalRecovered')\n  totalRecovered;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n              <h3>confirmed</h3>\n            </div>\n            <div class=\"value\">\n              {{totalConfirmed}}\n            </div>\n          </div>\n    </div>\n\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n              <h3>Recovered</h3>\n            </div>\n            <div class=\"value\">\n              {{totalRecovered}}\n            </div>\n          </div>\n    </div>\n\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n              <h3>Deaths</h3>\n            </div>\n            <div class=\"value\">\n              {{totalDeaths}}\n            </div>\n          </div>\n    </div>\n\n    <div class=\"card col p-3 m-3\">\n        <div class=\"ui statistic\">\n            <div class=\"label\">\n              <h3>Active</h3>\n            </div>\n            <div class=\"value\">\n              {{totalActive}}\n            </div>\n          </div>\n    </div>\n\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\nimport { GlobalDataSummary } from 'src/app/models/gloabl-data';\nimport { GoogleChartInterface } from 'ng2-google-charts/google-charts-interfaces';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  totalConfirmed = 0;\n  totalActive = 0;\n  totalDeaths = 0;\n  totalRecovered = 0;\n  loading = true;\n  globalData : GlobalDataSummary[];\n  pieChart : GoogleChartInterface ={ chartType:'PieChart' }\n  columnChart : GoogleChartInterface ={ chartType:'ColumnChart' }\n  constructor(private dataService:DataServiceService) { }\n\n  initChart(caseType: String){\n\n    let datatable = [];\n    datatable.push([\"Country\",\"Cases\"]);\n    \n    this.globalData.forEach(cs=>{\n      let value:number;\n      if (caseType == 'c')\n        if (cs.confirmed > 300000) \n          value=cs.confirmed;\n          \n      if (caseType == 'a')\n        if (cs.active > 100000) \n          value=cs.active;\n\n      if (caseType == 'd')\n        if (cs.deaths > 10000) \n          value=cs.deaths;\n\n      if (caseType == 'r')\n        if (cs.recovered > 250000) \n          value=cs.recovered;\n\n        datatable.push([\n          cs.country , value\n        ])\n    })\n    console.log(datatable);\n    \n\n    this.pieChart = {\n      chartType: 'PieChart',\n      dataTable : datatable,\n      //firstRowIsData: true,\n      options: { \n          height: 500,\n          animation:{\n            duration: 1000,\n            easing: 'out',\n          },\n      },\n    };\n\n    this.columnChart = {\n      chartType: 'ColumnChart',\n      dataTable : datatable,\n      //firstRowIsData: true,\n      options: { \n        height: 500,\n        animation:{\n          duration: 1000,\n          easing: 'out',\n        },\n      },\n    };\n  }\n\n  ngOnInit(): void {\n    this.dataService.getGlobalData()\n    .subscribe(\n      {\n        next: (result)=>{\n          console.log(result);\n          this.globalData= result;\n          result.forEach(cs=>{\n            if(!Number.isNaN(cs.confirmed)){\n            this.totalActive += cs.active;\n            this.totalConfirmed += cs.confirmed;\n            this.totalDeaths += cs.deaths;\n            this.totalRecovered += cs.recovered;\n            }\n\n          })\n\n          \n          this.initChart('c');\n        },\n        complete: ()=>{\n          this.loading=false;\n        }\n      }\n    )\n  }\n\n  updateChart(input: HTMLInputElement){\n    console.log(input.value);\n    this.initChart(input.value);\n  }\n\n}\n","<div class=\"ui inverted dimmer\" [class.active]='loading'>\n  <div class=\"ui text loader\">Loading</div>\n</div>\n\n<div class=\"jumbotron bg-white text-center\">\n    <h1 class=\"display-4\">Corona Covid-19 Tracker</h1>\n    <hr>\n    <app-dashboard-card [totalConfirmed]=\"totalConfirmed\" [totalActive]=\"totalActive\" [totalRecovered]=\"totalRecovered\"\n    [totalDeaths]=\"totalDeaths\" ></app-dashboard-card>\n</div>\n<hr>\n<div class=\"ui form\">\n  <div class=\"inline fields\">\n    <label for=\"fruit\">Select Case Type:</label>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"c\" #c (click)=\"updateChart(c)\" value='c' name=\"casetype\" checked=\"\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"c\">Confirmed</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"d\" #d (click)=\"updateChart(d)\" value='d' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"d\">Deaths</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"r\" #r (click)=\"updateChart(r)\" value='r' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"r\">Recovered</label>\n      </div>\n    </div>\n    <div class=\"field\">\n      <div class=\"ui radio checkbox\">\n        <input type=\"radio\" id=\"a\" #a (click)=\"updateChart(a)\" value='a' name=\"casetype\" tabindex=\"0\" class=\"hidden\">\n        <label for=\"a\">Active</label>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col\">\n    <google-chart [data]=\"columnChart\"></google-chart>\n  </div>\n  <div class=\"col\">\n    <google-chart [data]=\"pieChart\"></google-chart>    \n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" routerLink=\"/\">Covid-19 Tracker</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" routerLink=\"/\">Home <span class=\"sr-only\">(current)</span></a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"countries\">Countries</a>\n        </li>\n        \n      </ul>\n      <form class=\"form-inline my-2 my-lg-0\">\n        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n        <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n      </form>\n    </div>\n  </nav>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from \"rxjs/operators\";\nimport { GlobalDataSummary } from '../models/gloabl-data';\nimport { DateWiseData } from '../models/date-wise-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService {\n\n  private globalDataUrl=\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/08-18-2020.csv\";\n  private dateWiseDataUrl=\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\"\n\n  constructor(private http:HttpClient) { }\n\n  getDataWiseData(){\n    return this.http.get(this.dateWiseDataUrl,{responseType:'text'})\n      .pipe(map(result =>{\n          let rows= result.split('\\n');\n          let mainData = {};\n          // console.log(rows);\n          let header = rows[0];\n          let dates = header.split(/,(?=\\S)/);\n          dates.splice(0,11);\n          rows.splice(0,1);\n          // console.log(dates);\n          \n          rows.forEach(row=>{\n            let cols = row.split(/,(?=\\S)/);\n            // console.log(cols);\n            \n            let con =cols [1] ;\n            cols.splice(0,11);\n            // console.log(con , cols);\n            mainData[con]= [];\n            cols.forEach((value,index)=>{\n              let dw: DateWiseData = {\n                cases: +value,\n                country: con,\n                date:new Date(Date.parse(dates[index]))\n              }\n              mainData[con].push(dw);\n            })\n          })\n          // console.log(mainData);\n          \n          return mainData;\n      }))\n  }\n\n  getGlobalData(){\n    return this.http.get(this.globalDataUrl, {responseType: 'text'}).pipe(\n      map(result=>{\n        let data:GlobalDataSummary[]=[];\n        let raw = [];\n        let rows=result.split('\\n');\n        rows.splice(0, 1);\n        // console.log(rows);\n        rows.forEach(row=>{\n          let cols= row.split(/,(?=\\S)/);\n          let cs= {\n            country: cols[3],\n            confirmed: +cols[7],\n            deaths: +cols[8],\n            recovered: +cols[9],\n            active: +cols[10]\n          };\n          let temp = raw[cs.country];\n          if(temp){\n            temp.active= cs.active + temp.active;\n            temp.confirmed= cs.confirmed + temp.confirmed;\n            temp.deaths= cs.deaths + temp.deaths;\n            temp.recovered= cs.recovered + temp.recovered;\n\n            raw[cs.country] = temp;\n          }else{\n            raw[cs.country] = cs;\n          }\n          \n        })\n\n        return <GlobalDataSummary[]>Object.values(raw);\n      })\n    )\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}